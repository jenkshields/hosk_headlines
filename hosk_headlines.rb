require 'marky_markov'
require 'tempfile'
require 'rubygems'
require 'bundler/setup'
require 'mastodon'
require 'rest-client'
require './authinfo.rb'

client = Mastodon::REST::Client.new(base_url: "https://botsin.space", bearer_token: @bearer)


#take the CSV generated by the scraper and strip any comma not surrounded by whitespace
#also strip quotation marks

def file_edit(filename, regexp, replacement)
  Tempfile.open(".#{File.basename(filename)}", File.dirname(filename)) do |tempfile|
    File.open(filename).each do |line|
      tempfile.puts line.gsub(regexp, replacement)
    end
    tempfile.fdatasync
    tempfile.close
    stat = File.stat(filename)
    FileUtils.chown stat.uid, stat.gid, tempfile.path
    FileUtils.chmod stat.mode, tempfile.path
    FileUtils.mv tempfile.path, filename
  end
end

file_edit('headlines.txt', "\"", '')
file_edit('headlines.txt', /(,(?=\S)|:)/, ' ')
file_edit('headlines.txt', "Hosking", '')

file_edit('blurbs.txt', /(,(?=\S)|:)/, ' ')
file_edit('blurbs.txt', "\"", '')
file_edit('blurbs.txt', 'COMMENT:', '')
file_edit('blurbs.txt', 'COMMENT', '')

def tooter(client)
  headline_markov = MarkyMarkov::TemporaryDictionary.new
  headline_markov.parse_file "headlines.txt"
  headline = "Hosking: #{headline_markov.generate_n_words rand(5..10)}"
  

  blurb_markov = MarkyMarkov::TemporaryDictionary.new
  blurb_markov.parse_file "blurbs.txt"
  blurb = "COMMENT: #{blurb_markov.generate_n_sentences 2}"

  article = headline + "\n" + "\n" + blurb

  #client.create_status(article)
  RestClient.post 'https://botsin.space/api/v1/statuses', {status: article, spoiler_text: 'auto-generated headline from conservative commentator: may be crap'}, {:Authorization => "Bearer #{@bearer}"}
  puts "tooted: #{article}"

  headline_markov.clear!
  blurb_markov.clear!
end

while true
  tooter(client)
  puts "sleeping..."
  sleep(3600)
end